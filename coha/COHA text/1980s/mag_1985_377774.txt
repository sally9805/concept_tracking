@@377774

Critics of President Reagan 's Strategic Defense Initiative ( Star Wars ) program have questioned the feasibility of the laser and particle-beam weapons , sensing and guidance devices , battle management stations and other hardware necessary for a system that would intercept and destroy enemy missiles before they reached their targets in the U.S. But until recently they have largely overlooked what may be the biggest stumbling block to an effective defense against a massive nuclear missile attack : the computer software needed to make the system work . Says Thomas Probert , director of computer and software engineering for the Institute for Defense Analyses : " The hardware will be there . The real problem is the software . " <P> That difficulty has been spotlighted by the resignation of Computer Scientist David Parnas from a nine-member Star Wars advisory panel on computing . Parnas , an American professor at the University of Victoria , in British Columbia , had worked with the Naval Research Laboratory since 1972 , helping to develop battle computer programs for the Navy . But after attending the first meeting of his @ @ @ @ @ @ @ @ @ @ , he turned in a letter of resignation . " Because of the extreme demands on the system and our inability to test it , we will never be able to believe , with any confidence , that we have succeeded , " he wrote . " Most of the money spent will be wasted . " <P> Whether Parnas is right or wrong , the task facing Star Wars programmers is enormous . To identify , track and order the destruction of thousands of missiles and tens of thousands of warheads , in 30 minutes or less , would require by far the largest single computer program ever written . Recent estimates put the number of coded lines needed for such a program at between 19 million and 35 million . ( By contrast , the typical word-processing program has about 5,000 lines . ) Using conventional methods , that might take as many as 100,000 man-years of programming . <P> Even more daunting than the sheer size of the program is the requirement that it run flawlessly the first time out , a phenomenon unprecedented in the short history @ @ @ @ @ @ @ @ @ @ last month published a critique of the Star Wars software problem : " No program works right the first time . " A computer system as complex as Star Wars ' can be expected to contain tens of thousands of errors . Some of these could be eliminated by testing component parts one at a time . But when these components are finally put together , new bugs inevitably turn up . For example , in the first field trial of Aegis , a computerized system designed to defend naval ships from air attack , the weapon failed to stop six of 16 targets . Aegis ' faulty software was eventually debugged , but for the Star Wars program , there may be no second chance .                     